<launch>

  <arg name="use_sim_time" value="true"/>

  <!-- Run self-filter -->
  <node name="laser_filter" pkg="turtlebot_navigation" type="laser_footprint_filter" />

  <!-- Start Hokuyo -->
  <node pkg="urg_node" type="urg_node" name="laser_scan">
    <param name="port" value="/dev/ttyACM0"/>
    <param name="frame_id" value="base_link"/>
    <param name="calibrate_time" type="bool" value="true"/>  
    <param name="intensity" type="bool" value="false"/>
    <param name="angle_min" value="-1.65"/>   
    <param name="angle_max" value="1.65"/>    
    <param name="cluster" value="1"/>
    <remap from="scan" to="scan" />
  </node>

  <!-- Run the map server -->
  <arg name="map_file" default="$(find kobuki_i2r)/Maps/First_Map_AV.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />


  <!-- AMCL -->
  <arg name="custom_amcl_launch_file" default="$(find kobuki_i2r)/laser/amcl_turtlebot.launch.xml"/>
  <arg name="initial_pose_x" default="0.0"/> <!-- Use 17.0 for willow's map in simulation -->
  <arg name="initial_pose_y" default="0.0"/> <!-- Use 17.0 for willow's map in simulation -->
  <arg name="initial_pose_a" default="0.0"/>
  <arg name="initial_cov_xx" default="0.25"/> <!-- Use 17.0 for willow's map in simulation -->
  <arg name="initial_cov_yy" default="0.25"/> <!-- Use 17.0 for willow's map in simulation -->
  <arg name="initial_cov_aa" default="0.07"/>
    <arg name="scan" value="scan" />
  <include file="$(arg custom_amcl_launch_file)">
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
    <arg name="initial_cov_xx" value="$(arg initial_cov_xx)"/>
    <arg name="initial_cov_yy" value="$(arg initial_cov_yy)"/>
    <arg name="initial_cov_aa" value="$(arg initial_cov_aa)"/>
  </include>

  <!--- Run Move Base -->
  <include file="$(find kobuki_i2r)/launch/move_base_laser.launch" />

  <arg name="use_tf_static" default="false"/> 
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" >
            <param name="use_tf_static" value="$(arg use_tf_static)"/>
  </node>

  <!--node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0  /map /odom 100" /-->
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0 0 0 0 0 0  /base_link /laser 100" />

</launch>
